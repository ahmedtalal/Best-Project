/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package elfikysys.GUI;

import Models.DatabaseConnection;
import com.mysql.cj.protocol.Resultset;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author javcoder
 */
public class ClientsList extends javax.swing.JFrame {

    private int totalc = 0;
    public int tot = 0 ;
    public ClientsList() {
        initComponents();
        this.setLocationRelativeTo(null);
        retireveDataFromDB();
        this.tot = totalc ;
        jTable1.setRowHeight(30);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        jTable1.setDefaultRenderer(String.class, centerRenderer);
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        searchTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("قائمه العملاء");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(24, 18, 209), 2, true), "قائمه العملاء", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 18), new java.awt.Color(33, 25, 210))); // NOI18N

        back.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        back.setText("الرجوع الي القائمه الرئيسيه");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 255, 153));
        jTable1.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "تاريخ العقد", "شهر الاستلام", "يوم الاستلام", "شهر الدفع", "يوم الدفع", "الباقي", "المدفوع", "الاجمالي", "ملاحظات", "المواصفات", "رقم الفون", "العنوان", "الاسم", "الكود"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(9).setMinWidth(150);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(9).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(13).setPreferredWidth(15);
        }

        searchTextField.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("الرجاء اختيار كود العقد من الاعلي");

        jButton2.setBackground(new java.awt.Color(235, 235, 235));
        jButton2.setFont(new java.awt.Font("PT Bold Heading", 1, 18)); // NOI18N
        jButton2.setText("عرض تفاصيل العقد");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 17)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("اجمالي باقي الفلوس:");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(132, 16, 16), 1, true));

        total.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        total.setForeground(new java.awt.Color(0, 0, 153));
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0)));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("يمكنك البحث برقم العميل او اسمه ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(100, 100, 100))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(656, 656, 656)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1625, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(611, 611, 611)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 8, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(49, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        this.dispose();
        MainPage main = new MainPage();
        main.setVisible(true);
    }//GEN-LAST:event_backMouseClicked

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        jButton2.setBackground(new Color(235, 235, 235));               // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setBackground(new Color(210, 210, 210));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int seletedRow = -1;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        seletedRow = jTable1.getSelectedRow();

        String name, address, phone, requirements, notes, dateContract;
        int code, totalprice, emdfoaa, tips, payday, paymonth, recieveday, recievemonth;
        if (seletedRow == -1) {
            JOptionPane.showMessageDialog(null, "الرجاء اختيار العقد الذي تريد عرض تفصيله  ", "تحذير", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0).toString().equalsIgnoreCase(jTable1.getValueAt(seletedRow, 0).toString())) {
                    seletedRow = i;
                    break;
                }
            }
            code = Integer.parseInt(model.getValueAt(seletedRow, 0).toString());
            name = model.getValueAt(seletedRow, 1).toString();
            address = model.getValueAt(seletedRow, 2).toString();
            phone = model.getValueAt(seletedRow, 3).toString();
            requirements = model.getValueAt(seletedRow, 4).toString();
            notes = model.getValueAt(seletedRow, 5).toString();
            totalprice = Integer.parseInt(model.getValueAt(seletedRow, 6).toString());
            emdfoaa = Integer.parseInt(model.getValueAt(seletedRow, 7).toString());
            tips = Integer.parseInt(model.getValueAt(seletedRow, 8).toString());
            payday = Integer.parseInt(model.getValueAt(seletedRow, 9).toString());
            paymonth = Integer.parseInt(model.getValueAt(seletedRow, 10).toString());
            recieveday = Integer.parseInt(model.getValueAt(seletedRow, 11).toString());
            recievemonth = Integer.parseInt(model.getValueAt(seletedRow, 12).toString());
            dateContract = model.getValueAt(seletedRow, 13).toString();

            dataContract d = new dataContract(code, name, address, phone, requirements,
                    notes, totalprice, emdfoaa, tips, payday, paymonth, recieveday, recievemonth, dateContract);
            d.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
//        if (searchTextField.getText().equals("")) {
//            //model.setRowCount(0);
//            //model.setColumnCount(0);
//            retireveDataFromDB1();
//        }

//        if (searchTextField.getText().equals("")) {
////            JOptionPane.showMessageDialog(null, "من فضلك قم بادخال كود العميل الذي تريد البحث عنه ");
//            retireveDataFromDB1();
//        } else if (!searchTextField.getText().equals("")) {
//            char c;
//            String resu = searchTextField.getText();
//            for (int i = 0; i < resu.length(); i++) {
//                for (c = 'a'; c < 'z'; c++) {
//                    if (resu.charAt(i) == c) {
//                        JOptionPane.showMessageDialog(null, "من فضلك يجب عليك ادخال ارقام فقط ولا حروف");
//                        searchTextField.setText("");
//                        return;
//                    }
//                }
//            }
//            try {
//                int convert = Integer.parseInt(searchTextField.getText());
//                if (convert <= 0) {
//                    JOptionPane.showMessageDialog(null, "هذا الرقم غير صحيح من فصلك ادخل رقم صحيح");
//                } else {
//                    int result = Integer.parseInt(searchTextField.getText());
//                    retrieveSpecialFromDB(result);
//                }
//            } catch (Exception e) {
//                //searchByName(searchTextField.getText()) ;
//            }
//
//        }
        String m = searchTextField.getText().toLowerCase();
        filter(m);
    }//GEN-LAST:event_searchTextFieldKeyReleased

    void filter(String se) {
        TableModel model = jTable1.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) model);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(se, 0, 1));
    }

    private void retireveDataFromDB() {
        Vector<String> columnsnName = new Vector<>();
        Vector<Object> data = new Vector<>();
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null;
        ResultSetMetaData rsm = null;
        String query = "SELECT * FROM contracts";
        columnsnName.add("الكود");
        columnsnName.add("الاسم");
        columnsnName.add("العنوان");
        columnsnName.add("رقم الفون");
        columnsnName.add("المواصفات");
        columnsnName.add("المحلاظات");
        columnsnName.add("الاجمالي");
        columnsnName.add("المدفوع");
        columnsnName.add("الباقي");
        columnsnName.add("يوم الدفع");
        columnsnName.add("شهر الدفع");
        columnsnName.add("يوم الاستلام");
        columnsnName.add("شهر الاستلام");
        columnsnName.add("تاريخ العقد");
        try {
            conn = DatabaseConnection.getconnection();
            st = conn.createStatement();
            rs = st.executeQuery(query);
            rsm = rs.getMetaData();
            int cot = rsm.getColumnCount();
            while (rs.next()) {
                totalc += rs.getInt("Teps");
                Vector<Object> v = new Vector<>(cot);
                for (int x = 1; x <= cot; x++) {
                    v.add(rs.getObject(x));
                }
                data.add(v);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Listcanf.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }

                if (st != null) {
                    st.close();
                }

                if (rs != null) {
                    rs.close();
                }
            } catch (Exception e) {
            }
        }
        DefaultTableModel model;
        model = new DefaultTableModel(data, columnsnName);
        jTable1.setModel(model);
        total.setText(String.valueOf(totalc));
    }

    private void retireveDataFromDB1() {
        Vector<String> columnsnName = new Vector<>();
        Vector<Object> data = new Vector<>();
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null;
        ResultSetMetaData rsm = null;
        String query = "SELECT * FROM contracts";
        columnsnName.add("الكود");
        columnsnName.add("الاسم");
        columnsnName.add("العنوان");
        columnsnName.add("رقم الفون");
        columnsnName.add("المواصفات");
        columnsnName.add("المحلاظات");
        columnsnName.add("الاجمالي");
        columnsnName.add("المدفوع");
        columnsnName.add("الباقي");
        columnsnName.add("يوم الدفع");
        columnsnName.add("شهر الدفع");
        columnsnName.add("يوم الاستلام");
        columnsnName.add("شهر الاستلام");
        columnsnName.add("تاريخ العقد");
        try {
            conn = DatabaseConnection.getconnection();
            st = conn.createStatement();
            rs = st.executeQuery(query);
            rsm = rs.getMetaData();
            int cot = rsm.getColumnCount();
            while (rs.next()) {
                Vector<Object> v = new Vector<>(cot);
                for (int x = 1; x <= cot; x++) {
                    v.add(rs.getObject(x));
                }
                data.add(v);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Listcanf.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }

                if (st != null) {
                    st.close();
                }

                if (rs != null) {
                    rs.close();
                }
            } catch (Exception e) {
            }
        }
        DefaultTableModel model;
        model = new DefaultTableModel(data, columnsnName);
        jTable1.setModel(model);
    }

    private void retrieveSpecialFromDB(int result) {
        Vector<String> columnsSpecial = new Vector<>();
        Vector<Object> dataListSpecial = new Vector<>();
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null;
        ResultSetMetaData rsm = null;
        String query = "SELECT * FROM contracts  WHERE Code = '" + result + "' ";
        columnsSpecial.add("الكود");
        columnsSpecial.add("الاسم");
        columnsSpecial.add("العنوان");
        columnsSpecial.add("رقم الفون");
        columnsSpecial.add("المواصفات");
        columnsSpecial.add("المحلاظات");
        columnsSpecial.add("الاجمالي");
        columnsSpecial.add("المدفوع");
        columnsSpecial.add("الباقي");
        columnsSpecial.add("يوم الدفع");
        columnsSpecial.add("شهر الدفع");
        columnsSpecial.add("يوم الاستلام");
        columnsSpecial.add("شهر الاستلام");
        columnsSpecial.add("تاريخ العقد");
        try {
            conn = DatabaseConnection.getconnection();
            st = conn.createStatement();
            rs = st.executeQuery(query);
            rsm = rs.getMetaData();
            int cot = rsm.getColumnCount();
            if (rs.next() == false) {
                JOptionPane.showMessageDialog(null, "هذا العميل غير موجود من فضلك قم اختيار كود اخر ");
                return;
            } else {
                //model.getDataVector().removeAllElements();
                // ((DefaultTableModel)jTable1.getModel()).setRowCount(0);
                // ((DefaultTableModel)jTable1.getModel()).setColumnCount(0);
                //model.setRowCount(0);
                //while (rs.next()) {
                Vector<Object> v = new Vector<>(cot);
                for (int x = 1; x <= cot; x++) {
                    v.add(rs.getObject(x));
                }
                dataListSpecial.add(v);
                //}
            }
        } catch (SQLException ex) {
            Logger.getLogger(Listcanf.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }

                if (st != null) {
                    st.close();
                }

                if (rs != null) {
                    rs.close();
                }
            } catch (Exception e) {
            }
        }
        DefaultTableModel model1;
        model1 = new DefaultTableModel(dataListSpecial, columnsSpecial);
        jTable1.setModel(model1);
    }

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientsList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables

}
